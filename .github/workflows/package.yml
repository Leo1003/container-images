---
name: "Build & publish container image"
on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      path:
        type: string
        required: true
      file:
        type: string
        default: "Containerfile"
      platforms:
        type: string
        default: "linux/amd64"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get APP_VERSION
        id: app_version
        run: |
          content=`cat ./${{ inputs.path }}/APP_VERSION`
          echo "version=$content" >> $GITHUB_OUTPUT
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ inputs.name }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.app_version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.app_version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.app_version.outputs.version }}
            type=ref,event=branch
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64,riscv64,arm"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ inputs.path }}
          file: ${{ inputs.path }}/${{ inputs.file }}
          push: true
          build-args: |
            APP_VERSION=${{ steps.app_version.outputs.version }}
          annotations: ${{ steps.meta.outputs.annotations }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
